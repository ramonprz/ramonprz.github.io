---
interface Props {
  post: any;
}

const { post } = Astro.props;
const { 
  title, 
  description, 
  pubDate, 
  author, 
  image, 
  readingTime,
  tags = [], 
} = post.data;
---

<article 
  class="blog-card"
  data-post
  data-tags={JSON.stringify(tags)}
>
  <div class="flex items-center gap-3 p-3">
    <div class="flex-grow min-w-0">
      <div class="flex justify-between items-center gap-4">
        <h2 class="text-base font-medium hover:text-primary-400 transition-colors truncate">
          <a href={`/${post.collection}/${post.slug}`}>{title}</a>
        </h2>
        <div class="flex items-center gap-3 flex-shrink-0 text-sm text-text-400">
          <div class="flex gap-2">
            {tags.map((tag: string) => (
              <span class="tag">
                {tag}
              </span>
            ))}
          </div>
          <time datetime={pubDate.toISOString()}>
            {pubDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            })}
          </time>
        </div>
      </div>
    </div>
  </div>
</article>

<style>
  .blog-card {
    background: rgba(var(--background-800), 0.5);
    border: 1px solid rgba(var(--text-400), 0.1);
    border-radius: 0.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .blog-card:hover {
    transform: translateX(4px);
    border-color: rgba(var(--primary-400), 0.2);
  }

  .tag {
    font-size: 0.75rem;
    padding: 0.125rem 0.5rem;
    border-radius: 9999px;
    background: rgba(74, 222, 128, 0.1);
    color: rgb(74, 222, 128);
    border: 1px solid rgb(74, 222, 128);
    transition: all 0.2s ease;
  }

  .tag:hover {
    background: rgba(74, 222, 128, 0.2);
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .fade-in {
    animation: slideIn 0.3s ease-out forwards;
  }
</style>
