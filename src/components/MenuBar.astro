---
const menuItems = [
  { title: 'Home', href: '/' },
  { title: 'About', href: '/about' },
  { title: 'Learn', href: '/learn' },
  { title: 'Read', href: '/read' },
  { title: 'Watch', href: '/watch' },
];
---

<div
  x-data="menuBar()"
  @click.away="menuBarOpen = false"
  class="relative top-0 left-0 z-50 w-auto transition-all duration-150 ease-out"
>
  <!-- Mobile hamburger button -->
  <button 
    @click="mobileMenuOpen = !mobileMenuOpen" 
    class="md:hidden p-2 rounded-md hover:bg-neutral-100"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
  </button>

  <!-- Desktop menu -->
  <div class="hidden md:block relative top-0 left-0 z-40 w-auto h-10 transition duration-200 ease-out">
    <div class="w-full h-full p-1 bg-white border rounded-md border-neutral-200/80">
      <div class="flex justify-between w-full h-full select-none text-neutral-900">
        {menuItems.map((item) => (
          <div class="relative h-full cursor-default">
            <a
              href={item.href}
              @click="openMenu('${item.title.toLowerCase()}')"
              @mouseover="hoverMenu('${item.title.toLowerCase()}')"
              :class="{ 'bg-neutral-100' : isMenuOpen('${item.title.toLowerCase()}') }"
              class="rounded text-sm cursor-pointer flex items-center leading-tight justify-center px-3 py-1.5 h-full hover:bg-neutral-100"
            >
              {item.title}
            </a>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div 
    x-show="mobileMenuOpen" 
    x-transition
    class="md:hidden absolute top-full left-0 w-full mt-2 bg-white border rounded-md border-neutral-200/80 shadow-lg"
  >
    {menuItems.map((item) => (
      <a
        href={item.href}
        class="block px-4 py-2 text-sm text-neutral-900 hover:bg-neutral-100"
      >
        {item.title}
      </a>
    ))}
  </div>
</div>

<script>
  function menuBar() {
    return {
      menuBarOpen: false,
      menuBarMenu: '',
      mobileMenuOpen: false,
      openMenu(menu) {
        this.menuBarOpen = true;
        this.menuBarMenu = menu;
      },
      hoverMenu(menu) {
        if (this.menuBarOpen) {
          this.menuBarMenu = menu;
        }
      },
      isMenuOpen(menu) {
        return this.menuBarOpen && this.menuBarMenu === menu;
      },
    }
  }
</script>

<style>
  [x-cloak] { display: none !important; }
</style>