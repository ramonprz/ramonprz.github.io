---
interface Section {
  id: string;
  title: string;
  icon: string;
  subsections: {
    id: string;
    title: string;
    count: number;
  }[];
}

interface Props {
  sections: Section[];
  activeSection: string;
}

const { sections, activeSection } = Astro.props;
---

<nav class="section-nav">
  <div class="nav-header">
    <h2>Learning Paths</h2>
  </div>

  <div class="sections-list">
    {sections.map((section) => (
      <div class={`section ${section.id === activeSection ? 'active' : ''}`}>
        <div class="section-header" data-section={section.id}>
          <div class="icon-wrapper">
            <svg class="icon" viewBox="0 0 24 24" set:html={section.icon}></svg>
            <div class="icon-backdrop"></div>
          </div>
          <span class="section-title">{section.title}</span>
        </div>

        <div class="subsections">
          {section.subsections.map((subsection) => (
            <a 
              href={`#${subsection.id}`} 
              class="subsection"
              data-count={subsection.count}
            >
              <span class="subsection-title">{subsection.title}</span>
              <span class="lesson-count">{subsection.count}</span>
            </a>
          ))}
        </div>
      </div>
    ))}
  </div>
</nav>

<style>
  .section-nav {
    position: sticky;
    top: 2rem;
    width: 300px;
    height: calc(100vh - 4rem);
    background: rgba(var(--background-800), 0.7);
    backdrop-filter: blur(12px);
    border-radius: 16px;
    padding: 1.5rem;
    overflow-y: auto;
    scrollbar-width: none;
    transform-style: preserve-3d;
  }

  .section-nav::-webkit-scrollbar {
    display: none;
  }

  .nav-header h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-50);
    margin-bottom: 2rem;
    text-align: center;
    position: relative;
  }

  .nav-header h2::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 50px;
    height: 2px;
    background: linear-gradient(90deg, 
      transparent,
      var(--primary-400),
      transparent
    );
  }

  .sections-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .section {
    position: relative;
  }

  .section-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.75rem;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .icon-wrapper {
    position: relative;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .icon {
    width: 24px;
    height: 24px;
    color: var(--text-50);
    z-index: 1;
  }

  .icon-backdrop {
    position: absolute;
    inset: 0;
    background: rgba(var(--primary-400), 0.1);
    border-radius: 8px;
    transform: rotate(0deg);
    transition: all 0.3s ease;
  }

  .section-title {
    font-weight: 500;
    color: var(--text-50);
  }

  .subsections {
    margin-left: 3.5rem;
    margin-top: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .subsection {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    color: var(--text-300);
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .subsection::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 3px;
    height: 0;
    background: var(--primary-400);
    transition: height 0.3s ease;
  }

  .lesson-count {
    padding: 0.25rem 0.5rem;
    background: rgba(var(--primary-400), 0.1);
    border-radius: 999px;
    font-size: 0.75rem;
    color: var(--text-400);
  }

  /* Active States */
  .section.active .section-header {
    background: rgba(var(--primary-400), 0.1);
  }

  .section.active .icon-backdrop {
    transform: rotate(45deg);
    background: rgba(var(--primary-400), 0.2);
  }

  .subsection:hover {
    background: rgba(var(--primary-400), 0.05);
    color: var(--text-50);
  }

  .subsection:hover::before {
    height: 60%;
  }

  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .section {
    animation: fadeIn 0.3s ease-out forwards;
    animation-delay: calc(var(--index) * 0.1s);
    opacity: 0;
  }
</style>

<script>
  // Handle section expansion
  document.querySelectorAll('.section-header').forEach(header => {
    header.addEventListener('click', () => {
      const section = header.parentElement;
      section.classList.toggle('active');
    });
  });
</script>
