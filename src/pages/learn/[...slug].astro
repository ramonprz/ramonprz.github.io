---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import Dock from '../../components/Dock.astro';

export async function getStaticPaths() {
  const lessons = await getCollection('learn');
  return lessons.map(lesson => ({
    params: { slug: lesson.slug },
    props: { lesson },
  }));
}

const { lesson } = Astro.props;
const { Content } = await lesson.render();

// Get section info for navigation
const allLessons = await getCollection('learn');
const sectionLessons = allLessons.filter(
  l => l.data.section === lesson.data.section && 
  l.data.subsection === lesson.data.subsection
).sort((a, b) => a.data.order - b.data.order);

const currentIndex = sectionLessons.findIndex(l => l.slug === lesson.slug);
const prevLesson = sectionLessons[currentIndex - 1];
const nextLesson = sectionLessons[currentIndex + 1];
---

<Layout title={`${lesson.data.title} | Learning Resources`}>
  <main class="max-w-4xl mx-auto px-4 py-12">
    <!-- Breadcrumb -->
    <nav class="text-sm mb-8">
      <ol class="flex items-center space-x-2">
        <li><a href="/learn" class="text-text-400 hover:text-primary-400">Learn</a></li>
        <li class="text-text-400">/</li>
        <li><span class="text-text-400">{lesson.data.section}</span></li>
        <li class="text-text-400">/</li>
        <li><span class="text-text-400">{lesson.data.subsection}</span></li>
      </ol>
    </nav>

    <!-- Lesson Header -->
    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-4">{lesson.data.title}</h1>
      <div class="flex items-center space-x-4 text-sm text-text-300">
        <span class="flex items-center">
          <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="12" cy="12" r="10"/><path d="M12 6v6l4 2"/>
          </svg>
          {lesson.data.duration}
        </span>
        <span class="flex items-center">
          <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
          {lesson.data.difficulty}
        </span>
        <span class="flex items-center">
          <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
            <circle cx="12" cy="7" r="4"/>
          </svg>
          {lesson.data.author}
        </span>
      </div>
    </header>

    <!-- Main Content -->
    <div class="lesson-content prose prose-invert prose-primary max-w-none">
      <Content />
    </div>

    <!-- Navigation Footer -->
    <footer class="mt-12 border-t border-text-400/10 pt-6">
      <div class="flex justify-between items-center">
        {prevLesson && (
          <a 
            href={`/learn/${prevLesson.slug}`}
            class="flex items-center text-text-400 hover:text-primary-400"
          >
            <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="M19 12H5M12 19l-7-7 7-7"/>
            </svg>
            Previous Lesson
          </a>
        )}
        {nextLesson && (
          <a 
            href={`/learn/${nextLesson.slug}`}
            class="flex items-center text-text-400 hover:text-primary-400 ml-auto"
          >
            Next Lesson
            <svg class="w-4 h-4 ml-2" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
        )}
      </div>
    </footer>
  </main>

  <!-- Dock Menu -->
  <div class="fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50">
    <Dock />
  </div>
</Layout>

<style>
  /* Style code blocks */
  .lesson-content :global(pre) {
    background: rgba(var(--background-800), 0.5);
    border: 1px solid rgba(var(--text-400), 0.1);
    border-radius: 8px;
    padding: 1rem;
    margin: 1.5rem 0;
    overflow-x: auto;
  }

  /* Style inline code */
  .lesson-content :global(code) {
    background: rgba(var(--primary-400), 0.1);
    color: var(--primary-400);
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-size: 0.9em;
  }

  /* Style blockquotes */
  .lesson-content :global(blockquote) {
    border-left: 4px solid var(--primary-400);
    padding-left: 1rem;
    margin: 1.5rem 0;
    color: var(--text-300);
  }

  /* Style headings */
  .lesson-content :global(h2) {
    font-size: 1.875rem;
    font-weight: 600;
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    color: var(--text-50);
  }

  .lesson-content :global(h3) {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--text-50);
  }

  /* Style lists */
  .lesson-content :global(ul),
  .lesson-content :global(ol) {
    margin: 1.25rem 0;
    padding-left: 1.25rem;
  }

  .lesson-content :global(li) {
    margin: 0.5rem 0;
    color: var(--text-300);
  }

  /* Style links */
  .lesson-content :global(a) {
    color: var(--primary-400);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .lesson-content :global(a:hover) {
    color: var(--primary-300);
  }
</style>
